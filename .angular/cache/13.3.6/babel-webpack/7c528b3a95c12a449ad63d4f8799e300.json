{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst urlUser = environment.ApiUrl + '/user';\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n    }\n    /**\r\n    * @param username\r\n    * @param password\r\n    * @returns\r\n    */\n\n\n    login(email, password) {\n      return this.http.post(urlUser + '/autenticar', {\n        email,\n        password\n      }).pipe(map(user => {\n        localStorage.setItem('user', JSON.stringify(user));\n        return user;\n      }));\n    }\n    /**\r\n     *\r\n     * @param user\r\n     * @returns\r\n     */\n\n\n    register(user) {\n      return this.http.post(urlUser + '/crear-usuario', user);\n    }\n    /**\r\n     *\r\n     * @param user\r\n     * @returns\r\n     */\n\n\n    update(user) {\n      return this.http.post(urlUser + '/actualizar-usuario', user);\n    }\n    /**\r\n     *\r\n     * @param email\r\n     * @returns\r\n     */\n\n\n    loginValidate(email) {\n      return this.http.post(urlUser + '/validar-correo', email);\n    }\n    /**\r\n    *\r\n    * @param password\r\n    * @returns\r\n    */\n\n\n    updatePassword(password) {\n      return this.http.post(urlUser + '/cambiar-password', password);\n    }\n\n  }\n\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module"}